dtmc

const double FrMote2_4 = 0.1;
const double FrMote3_1 = 0.1;
const double FrMote4_1 = 0.1;
const double FrMote5_9 = 0.1;
const double FrMote6_4 = 0.1;
const double FrMote7_2 = 0.1;
const double FrMote7_3 = 0.1;
const double FrMote8_1 = 0.1;
const double FrMote9_3 = 0.1;
const double FrMote10_6 = 0.1;
const double FrMote10_5 = 0.1;

const double DfMote7_2 = 0.5;
const double DfMote7_3 = 0.5;
const double DfMote10_6 = 0.5;
const double DfMote10_5 = 0.5;

const double LoadMote2 = 0.8;
const double LoadMote3 = 1.0;
const double LoadMote4 = 0.8;
const double LoadMote5 = 1.0;
const double LoadMote6 = 0.8;
const double LoadMote7 = 0.8;
const double LoadMote8 = 1.0;
const double LoadMote9 = 1.0;
const double LoadMote10 = 0.8;

module Topology
serviceInvoked:bool;
sendID:[1..10] init 1;
recvID:[1..10] init 1;
turn:[1..11] init 11;

//[] turn = 16 -> (turn'=2);
[] turn = 11 -> LoadMote2:(turn'=2) + 1-LoadMote2:(turn'=11); 
[] turn = 11 -> LoadMote3:(turn'=3) + 1-LoadMote3:(turn'=11); 
[] turn = 11 -> LoadMote4:(turn'=4) + 1-LoadMote4:(turn'=11); 
[] turn = 11 -> LoadMote5:(turn'=5) + 1-LoadMote5:(turn'=11); 
[] turn = 11 -> LoadMote6:(turn'=6) + 1-LoadMote6:(turn'=11); 
[] turn = 11 -> LoadMote7:(turn'=7) + 1-LoadMote7:(turn'=11); 
[] turn = 11 -> LoadMote8:(turn'=8) + 1-LoadMote8:(turn'=11); 
[] turn = 11 -> LoadMote9:(turn'=9) + 1-LoadMote9:(turn'=11); 
[] turn = 11 -> LoadMote10:(turn'=10) + 1-LoadMote10:(turn'=11); 

[] turn = 2 & serviceInvoked = false -> (sendID' = turn) & (recvID' = 4) & (serviceInvoked'=true);
[] turn = 3 & serviceInvoked = false -> (sendID' = turn) & (recvID' = 1) & (serviceInvoked'=true);
[] turn = 4 & serviceInvoked = false -> (sendID' = turn) & (recvID' = 1) & (serviceInvoked'=true);
[] turn = 5 & serviceInvoked = false -> (sendID' = turn) & (recvID' = 9) & (serviceInvoked'=true);
[] turn = 6 & serviceInvoked = false -> (sendID' = turn) & (recvID' = 4) & (serviceInvoked'=true);
[] turn = 7 & serviceInvoked = false -> DfMote7_2:(sendID' = turn) & (recvID' = 2) & (serviceInvoked'=true) 
	+ DfMote7_3:(sendID' = turn) & (recvID' = 3) & (serviceInvoked'=true);
[] turn = 8 & serviceInvoked = false -> (sendID' = turn) & (recvID' = 1) & (serviceInvoked'=true);
[] turn = 9 & serviceInvoked = false -> (sendID' = turn) & (recvID' = 1) & (serviceInvoked'=true);
[] turn = 10 & serviceInvoked = false -> DfMote10_6:(sendID' = turn) & (recvID' = 6) & (serviceInvoked'=true) 
	+ DfMote10_5:(sendID' = turn) & (recvID' = 5) & (serviceInvoked'=true);

[sendData] (serviceInvoked=true) -> (serviceInvoked'=true); 

[done] serviceInvoked=true & turn = 2 -> (serviceInvoked' = false) & (turn'=4);
[done] serviceInvoked=true & turn = 3-> (serviceInvoked' = false) & (turn'=1);
[done] serviceInvoked=true & turn = 4 -> (serviceInvoked' = false) & (turn'=1);
[done] serviceInvoked=true & turn = 5 -> (serviceInvoked' = false) & (turn'=9);
[done] serviceInvoked=true & turn = 6 -> (serviceInvoked' = false) & (turn'=4);
[done] serviceInvoked=true & turn = 7 & recvID = 2 -> (serviceInvoked' = false) & (turn'=2);
[done] serviceInvoked=true & turn = 7 & recvID = 3 -> (serviceInvoked' = false) & (turn'=3);
[done] serviceInvoked=true & turn = 8 -> (serviceInvoked' = false) & (turn'=1);
[done] serviceInvoked=true & turn = 9 -> (serviceInvoked' = false) & (turn'=1);
[done] serviceInvoked=true & turn = 10 & recvID = 6 -> (serviceInvoked' = false) & (turn'=6);
[done] serviceInvoked=true & turn = 10 & recvID = 5 -> (serviceInvoked' = false) & (turn'=5);
[done] serviceInvoked=true & turn = 1 -> (serviceInvoked' = false) & (turn'=1);

[]turn = 1 -> (turn'=1);
endmodule


label "Packetloss" = status = 2;

module Network
status:[0..3] init 0; 
[sendData] status = 0 -> (status'=1);

[] status = 1 & sendID = 2 & recvID = 4  -> FrMote2_4:(status'=2) + 1-FrMote2_4:(status'=3);
[] status = 1 & sendID = 3 & recvID = 1  -> FrMote3_1:(status'=2) + 1-FrMote3_1:(status'=3);
[] status = 1 & sendID = 4 & recvID = 1  -> FrMote4_1:(status'=2) + 1-FrMote4_1:(status'=3);
[] status = 1 & sendID = 5 & recvID = 9  -> FrMote5_9:(status'=2) + 1-FrMote5_9:(status'=3);
[] status = 1 & sendID = 6 & recvID = 4  -> FrMote6_4:(status'=2) + 1-FrMote6_4:(status'=3);
[] status = 1 & sendID = 7 & recvID = 2  -> FrMote7_2:(status'=2) + 1-FrMote7_2:(status'=3);
[] status = 1 & sendID = 7 & recvID = 3  -> FrMote7_3:(status'=2) + 1-FrMote7_3:(status'=3);
[] status = 1 & sendID = 8 & recvID = 1  -> FrMote8_1:(status'=2) + 1-FrMote8_1:(status'=3);
[] status = 1 & sendID = 9 & recvID = 3  -> FrMote9_3:(status'=2) + 1-FrMote9_3:(status'=3);
[] status = 1 & sendID = 10 & recvID = 6  -> FrMote10_6:(status'=2) + 1-FrMote10_6:(status'=3);
[] status = 1 & sendID = 10 & recvID = 5  -> FrMote10_5:(status'=2) + 1-FrMote10_5:(status'=3);

[] status = 2 -> (status'=2);
[done]status = 3 -> (status' = 0);
endmodule